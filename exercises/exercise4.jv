pipeline Exercise4Pipeline {

    HTTPDataExtractor
        -> ZipArchiveHandler
        -> CSVFileSelector
        -> TextDataInterpreter
        -> CSVDataProcessor
        -> HeaderRewriter
        -> BatteryHeaderRewriter
        -> TableDataInterpreter
        -> TemperatureTransformer
        -> BatteryTemperatureTransformer
        -> DataSaver;

    block HTTPDataExtractor oftype HttpExtractor { 
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip"; 
    }

    block ZipArchiveHandler oftype ArchiveInterpreter { 
        archiveType: "zip"; 
    }

    block CSVFileSelector oftype FilePicker {
        path: "/data.csv";
    }

    block TextDataInterpreter oftype TextFileInterpreter {}

    block CSVDataProcessor oftype CSVInterpreter { 
        delimiter: ";"; 
    }

    block HeaderRewriter oftype CellWriter {
        at: range A1:E1; 
        write: ["id", "producer", "model", "month", "temperature"];
    }

    block BatteryHeaderRewriter oftype CellWriter { 
        at: cell J1; 
        write: ["battery_temperature"];
    }

    constraint IDConstraint on integer: value > 0;

    valuetype ConstrainedID oftype integer {
        constraints: [IDConstraint];
    }

    block TableDataInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype ConstrainedID,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype integer,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal,
        ];
    }

    // Transformation for Celsius to Fahrenheit
    transform CelsiusToFahrenheit {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block TemperatureTransformer oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: "temperature";
        use: CelsiusToFahrenheit;
    }

    block BatteryTemperatureTransformer oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: "battery_temperature";
        use: CelsiusToFahrenheit;
    }

    block DataSaver oftype SQLiteLoader { 
        table: "temperatures"; 
        file: "./temperatures.sqlite"; 
    }
}
